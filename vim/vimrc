set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let g:vundle_default_git_proto='git'

" let Vundle manage Vundle
" required!
" Plugin 'gmarik/vundle'
Plugin 'VundleVim/Vundle.vim'

" ZenCoding
Plugin 'mattn/emmet-vim'

" vim-scripts repos
Plugin 'L9'
Plugin 'FuzzyFinder'
Plugin 'vim-scripts/AutoComplPop'

Plugin 'wincent/Command-T'
Plugin 'thinca/vim-quickrun'
Plugin 'vim-scripts/sudo.vim'
Plugin 'tpope/vim-pathogen'
Plugin 'itchyny/lightline.vim'

" Tagber
Plugin 'majutsushi/tagbar.git'
nmap <C-t> :TagbarToggle<CR>
Plugin 'scrooloose/nerdtree'
nmap <silent> <C-e> :NERDTreeToggle<CR>

" syntax
Plugin 'scrooloose/syntastic'
au BufRead,BufNewFile *.scss set filetype=sass
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_markdown_checkers = ['textlint']
let g:syntastic_text_checkers = ['textlint']


" syntax
Plugin 'wavded/vim-stylus'
Plugin 'digitaltoad/vim-jade'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'derekwyatt/vim-scala'
Plugin 'tpope/vim-rails.git'
Plugin 'elixir-lang/vim-elixir'

" for Python
Plugin 'jmcantrell/vim-virtualenv'

" open browser
Plugin 'tyru/open-browser.vim'
" カーソル下のURLをブラウザで開く
nmap <Leader>o <Plug>(openbrowser-open)
vmap <Leader>o <Plug>(openbrowser-open)
nnoremap <Leader>g :<C-u>OpenBrowserSearch<Space><C-r><C-w><Enter>

" Markdown
Plugin 'kannokanno/previm'
"let g:previm_open_cmd = 'open -a Firefox'
"md as markdown {{{
"autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
"autocmd FileType markdown call s:markdown_my_settings()
"function! s:markdown_my_settings()
"    nnoremap <silent><buffer>  <Leader>r :PrevimOpen<CR>
"endfunction
"}}}

" colorscheme
Plugin 'tomasr/molokai'


call vundle#end()            " required
filetype plugin indent on

"
"
"

set encoding=utf-8
set t_Co=256
hi Visual term=reverse cterm=reverse guibg=Grey
colorscheme molokai

set ambiwidth=double
set number
set backspace=2
set laststatus=2
setlocal omnifunc=syntaxcomplete#Complete

set showmatch
set nowrapscan

set tabstop=4
set expandtab
set smarttab
set shiftwidth=4
set shiftround
set nowrap
set cursorline
set ruler

set noautoindent
autocmd FileType * setlocal formatoptions-=ro
set formatoptions-=ro

highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
"call matchadd("ZenkakuSpace", '\%u3000')
match ZenkakuSpace /　/

"highlight Defines cterm=italic gui=italic

set hlsearch
set incsearch
set wrapscan

"Tab、行末の半角スペースを明示的に表示する。
set list
set listchars=tab:^\ ,trail:_

" LEADERを設定しておく

syntax on
"call pathogen#infect()
nmap <C-]> :tselect<CR>

nmap <Space><Right> :vs<CR>
nmap <Space><Down>  :sp<CR>
nmap <Space>` :nohlsearch<CR>:SyntasticReset<CR><Esc>

"set showtabline=2
nmap <Tab>          :tabnext<CR>
nmap <BackSpace>    :tabprevious<CR>
nmap tt             :tabnew<CR>
nmap t<Delete>      :tabclose<CR>
nmap t<BackSpace>   :tabclose<CR>

"
autocmd FileType vim :set dictionary+=~/.vim/dict/vim_functions.dict
autocmd FileType php :set dictionary+=~/.vim/dict/php_functions.dict
set complete+=k

" 改行コードの自動認識
set fileformats=unix,dos,mac
" □とか○の文字があってもカーソル位置がずれないようにする
if exists('&ambiwidth')
  set ambiwidth=double
endif
